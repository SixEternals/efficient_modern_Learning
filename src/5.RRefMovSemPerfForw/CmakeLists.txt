# cmake_minimum_required(VERSION 3.10)
# set(CMAKE_CXX_STANDARD_REQUIRED 11)
# project(ch5)

# STRING(REPLACE "-O2" "-Od" CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
# set(g++ test2.cpp -fno-elide-constructor) # 关闭编译器优化 给test1.cpp用的

# add_executable(app5 test1.cpp)

# ----------------------------------------------------------------
cmake_minimum_required(VERSION 3.10)
set(CMAKE_CXX_STANDARD 17) # 注意这里应该是标准版本号，而不是REQUIRED
project(ch5)

# 如果需要替换默认的发布模式优化标志，可以这样做：
# string(REPLACE "-O2" "-Od" CMAKE_CXX_FLAGS_RELEASE_MODIFIED "${CMAKE_CXX_FLAGS_RELEASE}")
# set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE_MODIFIED}" CACHE STRING "Release compile flags" FORCE)

# 为test1.cpp添加编译选项以关闭优化并禁用返回值优化
add_executable(app5 yuanshen.cpp)

# target_compile_options(app5 PRIVATE -fno-elide-constructors) # 注意这里是-fno-elide-constructors，并且使用target_compile_options